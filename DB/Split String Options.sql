DECLARE @n BIGINT = 10
DECLARE @List NVARCHAR(MAX) = 'K0=V0'

;WITH
L0   AS(SELECT 1 AS c UNION ALL SELECT 1),
L1   AS(SELECT 1 AS c FROM L0 AS A CROSS JOIN L0 AS B),
L2   AS(SELECT 1 AS c FROM L1 AS A CROSS JOIN L1 AS B),
L3   AS(SELECT 1 AS c FROM L2 AS A CROSS JOIN L2 AS B),
L4   AS(SELECT 1 AS c FROM L3 AS A CROSS JOIN L3 AS B),
L5   AS(SELECT 1 AS c FROM L4 AS A CROSS JOIN L4 AS B),
Nums AS(SELECT ROW_NUMBER() OVER(ORDER BY (SELECT NULL)) AS n FROM L5)
SELECT @List = @List + '|' + 'K' + CONVERT(VARCHAR, n) + '=' + 'V' + CONVERT(VARCHAR, n) FROM Nums WHERE n <= @n;

PRINT @List

-- SOLUTION 1
-- HOW JAY IMPLEMENTED IT

-- SOLUTION 2
-- USING TEMP TABLE
IF OBJECT_ID('tempdb..#TMP') IS NOT NULL
DROP TABLE #TMP
CREATE TABLE #TMP
(
	NV VARCHAR(1000)
)
DECLARE @SQL NVARCHAR(MAX)
SELECT @SQL = 'INSERT INTO #TMP SELECT ''' + REPLACE(@List, '|', ''' INSERT INTO #TMP SELECT ''') + ''''
PRINT @SQL
EXEC(@SQL)
SELECT * FROM #TMP


-- SOLUTION 3
-- USING XML
SELECT @List = '<Root>' + '<NV>' + REPLACE(@List, '|', '</NV><NV>') + '</NV></Root>'
PRINT @List
DECLARE @XML XML = CONVERT(XML, @List)

SELECT	pref.value('(text())[1]', 'varchar(1000)') as NVP
FROM	@XML.nodes('/Root/NV') AS NV(pref)

